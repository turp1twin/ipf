<!-- These schematron rules are written for the "IHE Laboratory Technical Framework Volume3 (LAB TF-3) August 08, 2008". 
2.3.5.11 Laboratory Observation 1.3.6.1.4.1.19376.1.3.1.6.
 -->
 <pattern id='p-1.3.6.1.4.1.19376.1.3.1.6-errors'>

 <rule context='*[cda:templateId/@root="1.3.6.1.4.1.19376.1.3.1.6"]'>

   <!-- Verify that templateId is used on the appropriate type of object -->
   <assert test='self::cda:observation'>
     Error: The templateId  1.3.6.1.4.1.19376.1.3.1.6 child element of observation and identifies a Laboratory Observation. This records a single laboratory observation as standalone or part of a battery.
   </assert>      
     
   <assert test='not(parent::cda:component) or parent::cda:component[@typeCode="COMP"]'>Error: The observation parent component shall have a typeCode set to "COMP".</assert>
   
   <assert test='@classCode="OBS"'>Error: An observation/@classCode shall be "OBS" for Laboratory Observation.</assert>
  
   <assert test='@moodCode="EVN"'>Error: An observation/@moodCode shall be "EVN" for Laboratory Observation.</assert>
   
   <assert test='cda:statusCode[@code="completed"] or cda:statusCode[@code="aborted"]'>
           Error: The observation/statusCode/@code shall be "completed" or "aborted" for Laboratory Observation.</assert>
   
   <assert test='not(cda:specimen) or cda:specimen[@typeCode="SPC"]'>Error: The specimen/@typeCode shall be "SPC" for Laboratory Observation.</assert>        
 
   <assert test='not(cda:performer) or cda:performer[@typeCode="PRF"]'>Error: The performer/@typeCode shall be "PRF" for Laboratory Observation.</assert> 

   <assert test='not(cda:author) or cda:author[@typeCode="AUT"]'>Error: The author/@typeCode shall be "AUT" for Laboratory Observation.</assert>  
  
   <assert test='not(cda:participant) or cda:participant[@typeCode="AUTHEN"] or cda:participant[@typeCode="RESP"] or cda:participant[@typeCode="DEV"]'>
        Error: The participant/@typeCode for shall be "AUTHEN", "RESP" or "DEV" for Laboratory Observation.</assert>

   <assert test='not(cda:entryRelationship and cda:entryRelationship/cda:observation) or cda:entryRelationship[@typeCode="REFR"]'>Error: The entryRelationship/@typeCode shall be "REFR" for Laboratory Observation.</assert>

   <assert test='not(cda:entryRelationship/cda:observation) or cda:entryRelationship/cda:observation[@classCode="OBS"]'>Error: The entryRelationship/observation/@classCode shall be "OBS" for Laboratory Observation.</assert>

   <assert test='not(cda:entryRelationship/cda:observation) or cda:entryRelationship/cda:observation[@moodCode="EVN"]'>Error: The entryRelationship/observation/@moodCode shall be "EVN" for Laboratory Observation.</assert>

   <assert test='not(cda:entryRelationship/cda:observation/cda:referenceRange) or cda:entryRelationship/cda:observation/cda:referenceRange[@typeCode="REFV"]'>Error: The entryRelationship/observation/referenceRange/@typeCode shall be "REFV"for Laboratory Observation.</assert>

   <assert test='not(cda:entryRelationship/cda:observation/cda:referenceRange/cda:observationRange) or cda:entryRelationship/cda:observation/cda:referenceRange/cda:observationRange[@typeCode="OBS"]'>
             The entryRelationship/observation/referenceRange/observationRange/@typeCode shall be "OBS" for Laboratory Observation.</assert>
  
   <assert test='not(cda:entryRelationship/cda:observation/cda:referenceRange/cda:observationRange) or cda:entryRelationship/cda:observation/cda:referenceRange/cda:observationRange[@moodCode="EVN.CRT"]'>
             The entryRelationship/observation/referenceRange/observationRange/@moodCode shall be "EVN.CRT" for Laboratory Observation.</assert>

   <assert test='not(cda:entryRelationship/cda:observation/cda:referenceRange/cda:observationRange/cda:interpretationCode)'>
             The entryRelationship/observation/referenceRange/observationRange/interpretationCode shall be present for Laboratory Observation.</assert>

</rule>
 
</pattern>

