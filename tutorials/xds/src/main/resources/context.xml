<!--
    Copyright 2009 the original author or authors. Licensed under the Apache
    License, Version 2.0 (the "License"); you may not use this file except
    in compliance with the License. You may obtain a copy of the License at
    http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable
    law or agreed to in writing, software distributed under the License is
    distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, either express or implied. See the License for the specific
    language governing permissions and limitations under the License.
-->

<!-- We can add more CXF related namespaces here if we need to add something to
     the default CXF configuration. -->
<beans xmlns="http://www.springframework.org/schema/beans" 
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:lang="http://www.springframework.org/schema/lang" 
       xmlns:camel="http://camel.apache.org/schema/spring"
    xmlns:util="http://www.springframework.org/schema/util"
    xsi:schemaLocation="
http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
http://www.springframework.org/schema/lang
http://www.springframework.org/schema/lang/spring-lang-2.5.xsd
http://www.springframework.org/schema/util
http://www.springframework.org/schema/util/spring-util-2.5.xsd
http://camel.apache.org/schema/spring 
http://camel.apache.org/schema/spring/camel-spring.xsd 
">

    <!-- The following imports are required to configure CXF. cxf-servlet
         is imported to configure CXF to run with servlet support. This 
         allows us to use Tomcat with the CXFServlet instead of using CXF 
         with a standalone Jetty server. -->
    <import resource="classpath:META-INF/cxf/cxf.xml" />
    <import resource="classpath:META-INF/cxf/cxf-servlet.xml" />

    <!-- Camel context and producer -->
    <camel:camelContext id="camelContext">
        <camel:jmxAgent id="agent" disabled="true" />
        <camel:routeBuilder ref="iti4142RouteBuilder"/>        
        <camel:routeBuilder ref="iti43RouteBuilder"/>        
        <camel:routeBuilder ref="iti18RouteBuilder"/>        
    </camel:camelContext>
    
    <!-- Our route builders for the ITI transactions -->
    <bean id="iti4142RouteBuilder" depends-on="routeModelExtender"
        class="org.openehealth.ipf.tutorials.xds.Iti4142RouteBuilder">
    </bean>

    <bean id="iti43RouteBuilder" depends-on="routeModelExtender"
        class="org.openehealth.ipf.tutorials.xds.Iti43RouteBuilder">
    </bean>

    <bean id="iti18RouteBuilder" depends-on="routeModelExtender"
        class="org.openehealth.ipf.tutorials.xds.Iti18RouteBuilder">
    </bean>

    <!-- The DSL extensions. We use the core extension of the IPF and the ones 
         that come with the XDS components. In addition, we also define our own. -->
    <bean id="coreModelExtension"
        class="org.openehealth.ipf.platform.camel.core.extend.CoreModelExtension">
    </bean>

    <bean id="regRepModelExtension" class="org.openehealth.ipf.tutorials.xds.RegRepModelExtension">
        <property name="dataStore" ref="dataStore"/>
    </bean>

    <bean id="routeModelExtender" 
        class="org.openehealth.ipf.platform.camel.core.extend.DefaultModelExtender">
        <property name="routeModelExtensions">
            <list>
                <ref bean="coreModelExtension" />
                <ref bean="regRepModelExtension" />
            </list>
        </property>
    </bean>

    <!-- The store that contains all the in-memory documents and their meta data -->    
    <bean id="dataStore" class="org.openehealth.ipf.tutorials.xds.DataStore" />
</beans>
        
    <!--http-conf:conduit name="*.http-conduit">
        <http-conf:client ProxyServer="localhost" ProxyServerPort="8888" ProxyServerType="HTTP" AllowChunking="false"/>
    </http-conf:conduit-->

        